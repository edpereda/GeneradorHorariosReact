{"version":3,"sources":["img/info.png","components/Header.jsx","components/Mensaje.jsx","components/Formulario.jsx","helpers.js","components/Materia.jsx","components/EditorMaterias.jsx","components/MateriaGenerada.jsx","components/Horario.jsx","components/ListaDeHorarios.jsx","components/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Header","titulo","useState","modalStyle","open","setOpen","classes","className","src","require","alt","onClick","Modal","onClose","style","href","Mensaje","mensaje","tipo","Formulario","listamaterias","setListaMaterias","shortid","id","generate","nombre","profesor","grupo","monstart","tuestart","wedstart","thustart","fristart","monend","tueend","wedend","thuend","friend","selected","materia","setMateria","show","setMensaje","onChange","e","target","name","value","limpiarCampos","onSubmit","preventDefault","trim","setTimeout","type","htmlFor","changeHoursFormat","horaInicio","horaFinal","strHoraInicio","strHoraFinal","undefined","toString","changeGroupProfessor","word","Materia","checkbox","index","HandleChangeSeleccionar","checked","map","window","confirm","newList","filter","HandleChangeEliminar","EditorMaterias","setListaMateriasSeleccionadas","listamateriasseleccionadas","length","key","MateriaGenerada","Horario","horario","ListaDeHorarios","listadehorarios","MainPage","setListaDeHorarios","setTitulo","useEffect","localStorage","setItem","JSON","stringify","local","getItem","materias","parse","listaDeHorarios","listaDeMaterias","nuevaMateria","Object","assign","toLowerCase","replace","normalize","push","duplicatedSubjectsList","forEach","index1","index2","nuevaLista1","slice","nuevaLista2","splice","filterOverlapping","overlapping","MondayStartSubject1","MondayStartSubject2","TuesdayStartSubject1","TuesdayStartSubject2","WednesdayStartSubject1","WednesdayStartSubject2","ThursdayStartSubject1","ThursdayStartSubject2","FridayStartSubject1","FridayStartSubject2","MondayFinishSubject1","MondayFinishSubject2","TuesdayFinishSubject1","TuesdayFinishSubject2","WednesdayFinishSubject1","WednesdayFinishSubject2","ThursdayFinishSubject1","ThursdayFinishSubject2","FridayFinishSubject1","FridayFinishSubject2","console","log","materiaOriginal","nombreOriginal","setOriginalValues","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7986f7c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/info.44048fa3.png\";","import React, {useState} from 'react';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport './header.css';\r\n\r\n\r\n// Estilos para modal\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 600,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst Header = ({titulo}) => {\r\n\r\n    // Configuración del modal de material-ui\r\n    const [ modalStyle ] = useState(getModalStyle);\r\n    const [ open, setOpen ] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    // Funcion que muestra MODAL\r\n    const mostrarAyuda = () => {\r\n        handleOpen();\r\n    }\r\n    return ( \r\n        // <div className=\"white-text center-align\">\r\n        <div className='row'>\r\n            <div className='col s12 m11'>\r\n                <h4 className='titulo'>{titulo}</h4>\r\n            </div>\r\n            <div className='col s12 m1 white-text'>\r\n                <img src={require('../img/info.png')} alt=\"Ayuda\" className='help-button' onClick={mostrarAyuda}/>\r\n            </div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={()=> {handleClose()}}\r\n            >\r\n                { <div style={modalStyle} className={classes.paper}>\r\n                    {/* <img className=\"img-fluid my-4\" src={} /> */}\r\n                    <h3 className='center-align blue-text'>¿Cómo funciona?</h3>\r\n                    <p>\r\n                        Olvida tener que pasar horas tratando de encajar materias en un horario con huecos. \r\n                        <span className='red-text'><u>Ahora, puedes crear miles de horarios en un solo click.</u></span><br/><br/>\r\n                        Lo mejor de todo, es que puedes ingresar materias con el mismo nombre, pero que tengan un profesor\r\n                        diferente o un horario distinto, y el generador se encargará de mostrarte todos \r\n                        los posibles horarios que puedes utilizar.\r\n                    </p>\r\n                    <h5 className=\"mt-2\"><b>Instrucciones</b></h5>\r\n                    <ul>\r\n                        <li><b>&#164;</b> El nombre de la materia es obligatorio, los demás campos puedes dejarlos en blanco.</li>\r\n                        <li><b>&#164;</b> Si no ingresas ninguna hora en ningún día, aún así el generador la tomará en cuenta para generar horarios.</li>\r\n                        <li><b>&#164;</b> Recuerda seleccionar todas las materias en la segunda tabla para que el generador las tome en cuenta.</li>\r\n                        <li><b>&#164;</b> Si deseas generar alternativas con la misma materia pero con diferente horario, asegurate de escribir el nombre exactamente igual.</li>\r\n                        <li><b>&#164;</b> Si ningún horario es generado, seguramente dos materias coinciden en horas y no existe otra materia alternativa que el generador pueda utilizar.</li>\r\n                        <li><b>&#164;</b> Todas las materias ingresadas se quedarán guardadas, por si después deseas generar más horarios.</li>\r\n                    </ul>\r\n                    <h5 className=\"mt-2 text-align center\"><b>Contacto:</b></h5>\r\n                    <div className='text-align center'>\r\n                        <a href=\"mailto:gen.horarios@gmail.com\">gen.horarios@gmail.com</a>\r\n                    </div>\r\n                </div> }\r\n            </Modal>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nimport './formulario.css';\r\n\r\nconst Mensaje = ({mensaje, tipo}) => ( \r\n    <p className={tipo}>{mensaje}</p>\r\n );\r\n\r\n \r\nexport default Mensaje;","import React, {useState} from 'react';\r\n\r\nimport Mensaje from './Mensaje';\r\n\r\nimport './formulario.css'\r\n\r\nconst Formulario = ({listamaterias, setListaMaterias}) => {\r\n\r\n     //Generamos id a materia\r\n     const shortid = require('shortid');\r\n     const id = shortid.generate();\r\n    \r\n    //UseStates\r\n    const [materia, setMateria] = useState({\r\n        id: id,\r\n        nombre: '',\r\n        profesor: '',\r\n        grupo: '',\r\n        monstart: -1,\r\n        tuestart: -1,\r\n        wedstart: -1,\r\n        thustart: -1,\r\n        fristart: -1,\r\n        monend: -1,\r\n        tueend: -1,\r\n        wedend: -1,\r\n        thuend: -1,\r\n        friend: -1,\r\n        selected: false\r\n    });\r\n\r\n    const [mensaje, setMensaje] = useState({\r\n        show: false,\r\n        mensaje: '',\r\n        tipo: ''\r\n    });\r\n\r\n    //Extraemos valores de materia\r\n    const {\r\n            nombre, profesor, grupo, monstart,\r\n                                    tuestart,\r\n                                    wedstart,\r\n                                    thustart,\r\n                                    fristart,\r\n                                                monend,\r\n                                                tueend,\r\n                                                wedend,\r\n                                                thuend,\r\n                                                friend } = materia;\r\n    // Funciones\r\n    const onChange = e => {\r\n\r\n        setMateria({\r\n            ...materia,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        //Si materia no tiene nombre\r\n         if (nombre.trim()=== ''){\r\n             setMensaje({show: true, mensaje:\"El campo *Materia* es obligatorio\", tipo:\"error\"});\r\n             setTimeout(() =>{\r\n                setMensaje({show: false, mensaje:\"El campo *Materia* es obligatorio\", tipo:\"error\"});\r\n             },3000)\r\n            return null;\r\n        }\r\n\r\n        //Si solo ingresa hora de inicio\r\n        if ((monstart!==-1&&monend===-1)||(tuestart!==-1&&tueend===-1)||(wedstart!==-1&&wedend===-1)||(thustart!==-1&&thuend===-1)||(fristart!==-1&&friend===-1)){\r\n            setMensaje({show: true, mensaje:\"Verificar Horas. *Falta Hora Fin*\", tipo:\"error\"});\r\n            setTimeout(() =>{\r\n            setMensaje({show: false, mensaje:\"Verificar Horas. *Falta Hora Fin*\", tipo:\"error\"});\r\n            },3000)\r\n            return null;\r\n        }\r\n\r\n        //Si solo ingresa hora de fin\r\n        if ((monstart===-1&&monend!==-1)||(tuestart===-1&&tueend!==-1)||(wedstart===-1&&wedend!==-1)||(thustart===-1&&thuend!==-1)||(fristart===-1&&friend!==-1)){\r\n            setMensaje({show: true, mensaje:\"Verificar Horas. *Falta Hora Inicio*\", tipo:\"error\"});\r\n            setTimeout(() =>{\r\n            setMensaje({show: false, mensaje:\"Verificar Horas. *Falta Hora Inicio*\", tipo:\"error\"});\r\n            },3000)\r\n            return null;\r\n        }\r\n\r\n        //Si la materia de inicio es despues que la final\r\n        if ((monstart>monend)||(tuestart>tueend)||(wedstart>wedend)||(thustart>thuend)||(fristart>friend)){\r\n            setMensaje({show: true, mensaje:\"Verificar Horas. *Discordancia con las horas ingresadas*\", tipo:\"error\"});\r\n            setTimeout(() =>{\r\n            setMensaje({show: false, mensaje:\"Verificar Horas. *Discordancia con las horas ingresadas*\", tipo:\"error\"});\r\n            },3000)\r\n            return null;\r\n        }\r\n        //Quitamos error\r\n        setMensaje({show: false, mensaje:\"\", tipo:\"\"});\r\n\r\n        //Guardamos en la lista de materias\r\n        setListaMaterias([\r\n            ...listamaterias,\r\n            materia\r\n        ])\r\n\r\n        //Muestra mensaje\r\n        setMensaje({show: true, mensaje:`Materia ${nombre} Agregada Correctamente`, tipo:\"success\"});\r\n             setTimeout(() =>{\r\n                setMensaje({show: false, mensaje:`Materia ${nombre} Agregada Correctamente`, tipo:\"success\"});\r\n             },2000)\r\n\r\n        limpiarCampos();\r\n    }\r\n\r\n    const limpiarCampos = () =>{\r\n        const id = shortid.generate();\r\n        setMateria({\r\n            id: id, nombre: '', profesor: '', grupo: '',    monstart: -1, tuestart: -1, wedstart: -1, thustart: -1, fristart: -1, \r\n                                                    monend: -1, tueend: -1, wedend: -1, thuend: -1, friend: -1,\r\n            selected: false\r\n        });\r\n    }\r\n\r\n    const borrarHoras = () =>{ \r\n        setMateria({\r\n            ...materia,\r\n            monstart: -1, tuestart: -1, wedstart: -1, thustart: -1, fristart: -1, \r\n            monend: -1, tueend: -1, wedend: -1, thuend: -1, friend: -1,\r\n        });\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={onSubmit}\r\n        >\r\n            {(mensaje.show) ? <Mensaje mensaje={mensaje.mensaje} tipo={mensaje.tipo}/> :null}\r\n            \r\n                <div className=\"input-field col s12 m4 l4 xl4\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"nombre\"\r\n                        id=\"materia\"\r\n                        value = {nombre}\r\n                        onChange={onChange}\r\n                        />\r\n                    <label htmlFor=\"materia\">Materia: </label>\r\n                </div>\r\n                <div className=\"input-field col s12 m4 l4 xl4\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"profesor\"\r\n                        id=\"profesor\"\r\n                        value={profesor}\r\n                        onChange={onChange}\r\n                        />\r\n                    <label htmlFor=\"profesor\">Profesor: </label>\r\n                </div>\r\n                <div className=\"input-field col s12 m4 l4 xl4\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"grupo\"\r\n                        id=\"grupo\"\r\n                        value={grupo}\r\n                        onChange={onChange}\r\n                        />\r\n                    <label htmlFor=\"grupo\">Grupo: </label>\r\n                </div>\r\n\r\n            <div className=\"col l12 m12 s12\">\r\n                <table className=\"responsive-table tabla-horarios\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th><th>Lunes</th><th>Martes</th><th>Miercoles</th><th>Jueves</th><th>Viernes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Hora Inicio</td>\r\n                            <td><input type=\"time\" name=\"monstart\" value={monstart} onChange={onChange}/></td>\r\n                            <td><input type=\"time\" name=\"tuestart\" value={tuestart} onChange={onChange}/></td>\r\n                            <td><input type=\"time\" name=\"wedstart\" value={wedstart} onChange={onChange}/></td>\r\n                            <td><input type=\"time\" name=\"thustart\" value={thustart} onChange={onChange}/></td>\r\n                            <td><input type=\"time\" name=\"fristart\" value={fristart} onChange={onChange}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Hora Fin</td>\r\n                            <td><input type=\"time\" name=\"monend\" value={monend} onChange={onChange}/></td>\r\n                            <td><input type=\"time\" name=\"tueend\" value={tueend} onChange={onChange}/></td>\r\n                            <td><input type=\"time\" name=\"wedend\" value={wedend} onChange={onChange}/></td>\r\n                            <td><input type=\"time\" name=\"thuend\" value={thuend} onChange={onChange}/></td>\r\n                            <td><input type=\"time\" name=\"friend\" value={friend} onChange={onChange}/></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"col s2 offset-s7 boton-borrar\">\r\n                <input\r\n                onClick={borrarHoras}\r\n                    type=\"button\" \r\n                    value=\"Borrar horas\"\r\n                    className=\"waves-effect waves-ligth btn-small red\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col s4 boton-ingresar offset-s4\">\r\n                <button\r\n                    type=\"submit\"\r\n                    value=\"Ingresar Materia\"\r\n                    className=\"waves-effect waves-ligth btn-large btn-block green lighten-2\"\r\n                >Ingresar Materia</button>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","export function changeHoursFormat(horaInicio,horaFinal){\r\n    let strHoraInicio = \"\";\r\n    let strHoraFinal = \"\";\r\n\r\n    if (horaInicio === undefined || horaFinal === undefined){\r\n        return \"\";\r\n    }\r\n    \r\n    strHoraInicio = horaInicio.toString();\r\n    strHoraFinal = horaFinal.toString();\r\n\r\n\r\n    if (horaInicio === -1){\r\n        strHoraInicio = '*';\r\n    }\r\n\r\n    if (horaFinal === -1){\r\n        strHoraFinal = '*';\r\n    }\r\n\r\n    return strHoraInicio + '\\n-\\n' + strHoraFinal; \r\n}\r\n\r\nexport function changeGroupProfessor(word){\r\n    if (word === ''){\r\n        return '*Sin Asignar*';\r\n    }\r\n\r\n    return word;\r\n}\r\n\r\nexport function cleanNamesSubjects(listaMaterias){\r\n    // console.log(listaMaterias);\r\n    let nuevaLista = listaMaterias.map(materia => {\r\n        var nuevaMateria = {};\r\n        Object.assign(nuevaMateria,materia);\r\n        //console.log(`Nueva materia: ${nuevaMateria.nombre}`);\r\n        var nombre = '';\r\n        nombre = materia.nombre;\r\n        nombre = nombre.toLowerCase().trim().replace(/ /g,'');      //Convierte a minusculas, espacios intermedios, derecho e izquierdo\r\n        nombre = nombre.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");   //Quita acentos\r\n        \r\n        nuevaMateria.nombre = nombre;\r\n        \r\n        return nuevaMateria;\r\n    });\r\n    \r\n    // console.log(nuevaLista);\r\n    return nuevaLista;\r\n}\r\n\r\n//Genera horarios si es que se encuentra dos materias con el mismo nombre\r\nexport function duplicatedSubjectsList(listaDeHorarios){\r\n    listaDeHorarios.forEach((listaDeMaterias,index) => {\r\n        for (let index1 = 0; index1 < listaDeMaterias.length; index1++){\r\n            for (let index2 = index1+1; index2 < listaDeMaterias.length; index2++){\r\n                //Verifica si tienen el mismo nombre\r\n                if ( listaDeMaterias[index1].nombre === listaDeMaterias[index2].nombre ){\r\n                    //Crea dos copias\r\n                    let nuevaLista1 = listaDeMaterias.slice();\r\n                    let nuevaLista2 = listaDeMaterias.slice();\r\n                    //Quita la materia duplicada\r\n                    nuevaLista1.splice(index1,1);\r\n                    nuevaLista2.splice(index2,1);\r\n                    //Agrega a listadeHorarios\r\n                    listaDeHorarios.push(nuevaLista1);\r\n                    listaDeHorarios.push(nuevaLista2);\r\n                    //Elimina donde hay dos materias duplicadas\r\n                    listaDeHorarios.splice(index,1);\r\n                    //Vuelve a iniciar\r\n                    duplicatedSubjectsList(listaDeHorarios);\r\n                }//if\r\n            }//for\r\n        }//for\r\n    })//forEach\r\n}\r\n\r\n//Primer filtro para materias que inician al mismo tiempo o terminan al mismo tiempo\r\nexport function filterOverlapping(listaDeHorarios){\r\n    listaDeHorarios.forEach((horario,index) => {\r\n        let overlapping = false;\r\n        for (let index1 = 0; index1 < horario.length; index1++){\r\n            for (let index2 = index1+1; index2 < horario.length; index2++){\r\n                //Horas de inicio\r\n                let MondayStartSubject1 = horario[index1].monstart;\r\n                let MondayStartSubject2 = horario[index2].monstart;\r\n\r\n                let TuesdayStartSubject1 = horario[index1].tuestart;\r\n                let TuesdayStartSubject2 = horario[index2].tuestart;\r\n\r\n                let WednesdayStartSubject1 = horario[index1].wedstart;\r\n                let WednesdayStartSubject2 = horario[index2].wedstart;\r\n                \r\n                let ThursdayStartSubject1 = horario[index1].thustart;\r\n                let ThursdayStartSubject2 = horario[index2].thustart;\r\n                \r\n                let FridayStartSubject1 = horario[index1].fristart;\r\n                let FridayStartSubject2 = horario[index2].fristart;\r\n\r\n                //Horas de final\r\n                let MondayFinishSubject1 = horario[index1].monend;\r\n                let MondayFinishSubject2 = horario[index2].monend;\r\n\r\n                let TuesdayFinishSubject1 = horario[index1].tueend;\r\n                let TuesdayFinishSubject2 = horario[index2].tueend;\r\n\r\n                let WednesdayFinishSubject1 = horario[index1].wedend;\r\n                let WednesdayFinishSubject2 = horario[index2].wedend;\r\n                \r\n                let ThursdayFinishSubject1 = horario[index1].thuend;\r\n                let ThursdayFinishSubject2 = horario[index2].thuend;\r\n                \r\n                let FridayFinishSubject1 = horario[index1].friend;\r\n                let FridayFinishSubject2 = horario[index2].friend;\r\n\r\n                // Both Mondays are not null\r\n                if(MondayStartSubject1 !== -1 && MondayStartSubject2 !== -1 && MondayFinishSubject1 !== -1 && MondayFinishSubject2 !== -1){\r\n    \r\n                    if(MondayStartSubject1 === MondayStartSubject2){\r\n                        overlapping = true;\r\n\r\n                        //pop from finalList\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(MondayFinishSubject1 === MondayFinishSubject2){\r\n                        overlapping = true;\r\n\r\n                        //pop from finalList\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (MondayStartSubject1 > MondayStartSubject2 && MondayStartSubject1 < MondayFinishSubject2){//subject1 starts in the middle of subject2\r\n                        overlapping = true;\r\n                        // console.log('Entro a monday1');\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(MondayFinishSubject1 > MondayStartSubject2 && MondayFinishSubject1 < MondayFinishSubject2){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n                        // console.log('Entro a monday2');\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (MondayStartSubject2 > MondayStartSubject1 && MondayStartSubject2 < MondayFinishSubject1){//subject2 starts in the middle of subject1\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(MondayFinishSubject2 > MondayStartSubject1 && MondayFinishSubject2 < MondayFinishSubject1){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n                        \r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n                // Both Tuesdays are not null\r\n                if(TuesdayStartSubject1  !== -1 && TuesdayStartSubject2  !== -1 && TuesdayFinishSubject1 !== -1 && TuesdayFinishSubject2 !== -1){\r\n\r\n                    if(TuesdayStartSubject1 === TuesdayStartSubject2){\r\n                        overlapping = true;\r\n\r\n                        //pop from listaDeHorarios\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(TuesdayFinishSubject1 === TuesdayFinishSubject2){\r\n                        overlapping = true;\r\n\r\n                        //pop from finalList\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (TuesdayStartSubject1 > TuesdayStartSubject2 && TuesdayStartSubject1 < TuesdayFinishSubject2){//subject1 starts in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(TuesdayFinishSubject1 > TuesdayStartSubject2 && TuesdayFinishSubject1 < TuesdayFinishSubject2){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (TuesdayStartSubject2 > TuesdayStartSubject1 && TuesdayStartSubject2 < TuesdayFinishSubject1){//subject2 starts in the middle of subject1\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(TuesdayFinishSubject2 > TuesdayStartSubject1 && TuesdayFinishSubject2 < TuesdayFinishSubject1){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Both Wednesdays are not null\r\n                if(WednesdayStartSubject1  !== -1 && WednesdayStartSubject2  !== -1 && WednesdayFinishSubject1 !== -1 && WednesdayFinishSubject2 !== -1){\r\n   \r\n                    if(WednesdayStartSubject1 === WednesdayStartSubject2){\r\n                        overlapping = true;\r\n\r\n                        //pop from listaDeHorarios\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(WednesdayFinishSubject1 === WednesdayFinishSubject2){\r\n                        overlapping = true;\r\n\r\n                        //pop from finalList\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (WednesdayStartSubject1 > WednesdayStartSubject2 && WednesdayStartSubject1 < WednesdayFinishSubject2){//subject1 starts in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(WednesdayFinishSubject1 > WednesdayStartSubject2 && WednesdayFinishSubject1 < WednesdayFinishSubject2){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (WednesdayStartSubject2 > WednesdayStartSubject1 && WednesdayStartSubject2 < WednesdayFinishSubject1){//subject2 starts in the middle of subject1\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(WednesdayFinishSubject2 > WednesdayStartSubject1 && WednesdayFinishSubject2 < WednesdayFinishSubject1){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                // Both Thursdays are not null\r\n                if(ThursdayStartSubject1  !== -1 && ThursdayStartSubject2  !== -1 && ThursdayFinishSubject1 !== -1 && ThursdayFinishSubject2 !== -1){\r\n\r\n                    if(ThursdayStartSubject1 === ThursdayStartSubject2){\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(ThursdayFinishSubject1 === ThursdayFinishSubject2){\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (ThursdayStartSubject1 > ThursdayStartSubject2 && ThursdayStartSubject1 < ThursdayFinishSubject2){//subject1 starts in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(ThursdayFinishSubject1 > ThursdayStartSubject2 && ThursdayFinishSubject1 < ThursdayFinishSubject2){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (ThursdayStartSubject2 > ThursdayStartSubject1 && ThursdayStartSubject2 < ThursdayFinishSubject1){//subject2 starts in the middle of subject1\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(ThursdayFinishSubject2 > ThursdayStartSubject1 && ThursdayFinishSubject2 < ThursdayFinishSubject1){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Both Fridays are not null\r\n                if(FridayStartSubject1  !== -1 && FridayStartSubject2  !== -1 && FridayFinishSubject1 !== -1 && FridayFinishSubject2 !== -1){\r\n\r\n                    if(FridayStartSubject1 === FridayStartSubject2){\r\n                        overlapping = true;\r\n\r\n                        //pop from listaDeHorarios\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(FridayFinishSubject1 === FridayFinishSubject2){\r\n                        overlapping = true;\r\n\r\n                        //pop from finalList\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (FridayStartSubject1 > FridayStartSubject2 && FridayStartSubject1 < FridayFinishSubject2){//subject1 starts in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(FridayFinishSubject1 > FridayStartSubject2 && FridayFinishSubject1 < FridayFinishSubject2){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if (FridayStartSubject2 > FridayStartSubject1 && FridayStartSubject2 < FridayFinishSubject1){//subject2 starts in the middle of subject1\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n\r\n                    if(FridayFinishSubject2 > FridayStartSubject1 && FridayFinishSubject2 < FridayFinishSubject1){//subject1 finishes in the middle of subject2\r\n                        overlapping = true;\r\n\r\n                        listaDeHorarios.splice(index,1);\r\n                        filterOverlapping(listaDeHorarios);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (overlapping){\r\n                break;\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport function setOriginalValues(listaDeHorarios,listaDeMaterias){\r\n    //console.log(listaDeMaterias);\r\n    listaDeHorarios.forEach(horario => {\r\n        console.log(horario);\r\n        horario.forEach(materia => {\r\n            listaDeMaterias.forEach(materiaOriginal => {\r\n                if (materia.id === materiaOriginal.id){\r\n                    const nombreOriginal = materiaOriginal['nombre'];\r\n                    materia.nombre = nombreOriginal;\r\n                }//if\r\n            });//forEach materiaOriginal\r\n        });//forEach materia\r\n    });//forEach listaHorarios\r\n}","import React from 'react';\r\n\r\nimport {changeHoursFormat,changeGroupProfessor} from '../helpers';\r\n\r\nconst Materia = ({materia, index, listamaterias, setListaMaterias}) => {\r\n\r\n    const HandleChangeSeleccionar = e => {\r\n        if (e.target.checked){\r\n            // Modifica la materia a seleccionado\r\n            setListaMaterias(\r\n                listamaterias.map(materia => {\r\n                    if (materia.id === e.target.id){\r\n                        materia.selected = true;\r\n                    }\r\n                    return materia\r\n                })\r\n            )\r\n        }else{\r\n            // Modifica la materia a deseleccionado\r\n            setListaMaterias(\r\n                listamaterias.map(materia => {\r\n                    if (materia.id === e.target.id){\r\n                        materia.selected = false;\r\n                    }\r\n                    return materia\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const HandleChangeEliminar = id => {\r\n        \r\n        const newList = listamaterias.filter(materia => materia.id !== id);\r\n\r\n        setListaMaterias(newList);\r\n    }\r\n\r\n    // carga el checkbox seleccionado si la materia se guardo seleccionada\r\n    let checkbox;\r\n    if (materia.selected){\r\n        checkbox =  <p>\r\n                        <label>\r\n                            <input type=\"checkbox\" className=\"filled-in\" id = {materia.id} checked=\"checked\" onChange={HandleChangeSeleccionar}/>\r\n                            <span></span>\r\n                        </label>\r\n                    </p>\r\n    \r\n\r\n    }else{\r\n        checkbox =  <p>\r\n                        <label>\r\n                            <input type=\"checkbox\" className=\"filled-in\" id = {materia.id} onChange={HandleChangeSeleccionar}/>\r\n                            <span></span>\r\n                        </label>\r\n                    </p>\r\n    }\r\n\r\n    return ( \r\n\r\n        <tr>\r\n            <td>{index+1}</td><td>{changeGroupProfessor(materia.grupo)}</td><td>{materia.nombre}</td><td>{changeGroupProfessor(materia.profesor)}</td>\r\n            <td>{changeHoursFormat(materia.monstart,materia.monend)}</td>\r\n            <td>{changeHoursFormat(materia.tuestart,materia.tueend)}</td>\r\n            <td>{changeHoursFormat(materia.wedstart,materia.wedend)}</td>\r\n            <td>{changeHoursFormat(materia.thustart,materia.thuend)}</td>\r\n            <td>{changeHoursFormat(materia.fristart,materia.friend)}</td>\r\n\r\n            <td>\r\n                {checkbox}\r\n            </td>\r\n            <td>\r\n                <input\r\n                    id={materia.id}\r\n                    onClick={e => { if (window.confirm(`¿Desea eliminar la materia ${materia.nombre} del grupo ${materia.grupo} ?`)){HandleChangeEliminar(materia.id);}}}\r\n                    type=\"button\" \r\n                    value=\"X\"\r\n                    className=\"waves-effect waves-ligth btn-small red white-text\"\r\n                />\r\n            </td>\r\n        </tr>\r\n     );\r\n}\r\n \r\nexport default Materia;","import React, { Fragment } from 'react';\r\n\r\nimport Materia from './Materia';\r\n\r\nimport './editorMaterias.css';\r\n\r\nconst EditorMaterias = ({listamaterias,setListaMaterias,listamateriasseleccionadas,setListaMateriasSeleccionadas}) => {\r\n\r\n    if (listamaterias.length === 0) return null;\r\n\r\n    \r\n\r\n    const generarListaMaterias = () => {\r\n        const newList = listamaterias.filter(materia => materia.selected === true);\r\n\r\n        setListaMateriasSeleccionadas(newList);\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <table className=\"tabla-seleccion-horarios highligth centered responsive-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th><th>Grupo</th><th>Materia</th><th>Profesor</th><th>Lunes</th><th>Martes</th><th>Miercoles</th><th>Jueves</th><th>Viernes</th><th>Seleccionar</th><th>Eliminar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listamaterias.map((materia,index) => (\r\n                        <Materia \r\n                            key = {materia.id}\r\n                            materia = {materia}\r\n                            index = {index}\r\n                            listamaterias = {listamaterias}\r\n                            setListaMaterias = {setListaMaterias}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"col s4 offset-s4 boton-generar-horarios\">\r\n                <input\r\n                    onClick={generarListaMaterias}\r\n                    type=\"button\" \r\n                    value=\"Generar Horarios\"\r\n                    className=\"waves-effect waves-ligth btn-large btn-block orange white-text\"\r\n                />\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default EditorMaterias;","import React from 'react';\r\n\r\nimport {changeHoursFormat,changeGroupProfessor} from '../helpers';\r\n\r\nconst MateriaGenerada = ({materia}) => {\r\n    return ( \r\n            <tr>\r\n                <td>{changeGroupProfessor(materia.grupo)}</td><td>{materia.nombre}</td><td>{changeGroupProfessor(materia.profesor)}</td>\r\n                <td>{changeHoursFormat(materia.monstart,materia.monend)}</td>\r\n                <td>{changeHoursFormat(materia.tuestart,materia.tueend)}</td>\r\n                <td>{changeHoursFormat(materia.wedstart,materia.wedend)}</td>\r\n                <td>{changeHoursFormat(materia.thustart,materia.thuend)}</td>\r\n                <td>{changeHoursFormat(materia.fristart,materia.friend)}</td>\r\n            </tr>\r\n     );\r\n}\r\n \r\nexport default MateriaGenerada;","import React, { Fragment } from 'react';\r\nimport MateriaGenerada from './MateriaGenerada';\r\n\r\nimport './horario.css';\r\n\r\nconst Horario = ({horario,index}) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"horarios-generados\">\r\n                <h3>Horario {index}</h3> \r\n                <table className=\" highligth centered responsive-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Grupo</th><th>Materia</th><th>Profesor</th><th>Lunes</th><th>Martes</th><th>Miercoles</th><th>Jueves</th><th>Viernes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {horario.map(materia => (\r\n                            <MateriaGenerada\r\n                                key={materia.id}\r\n                                materia = {materia}\r\n                            />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default Horario;","import React, { Fragment } from 'react';\r\nimport Horario from './Horario';\r\n\r\nconst ListaDeHorarios = ({listadehorarios}) => {\r\n    return (\r\n        <Fragment>\r\n            {listadehorarios.map((horario,index) => (\r\n                <Horario\r\n                    key = {horario[0].id}\r\n                    horario = {horario}\r\n                    index = {index+1}\r\n                />\r\n            ))}\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default ListaDeHorarios;","import React, {Fragment, useState, useEffect} from 'react';\r\n\r\nimport Header from './Header';\r\nimport Formulario from './Formulario';\r\nimport EditorMaterias from './EditorMaterias';\r\nimport ListaDeHorarios from './ListaDeHorarios';\r\n\r\nimport {cleanNamesSubjects, duplicatedSubjectsList, filterOverlapping, setOriginalValues} from '../helpers';\r\n\r\nconst MainPage = () => {\r\n\r\n    //UseStates\r\n    const [listamaterias, setListaMaterias] = useState([]);\r\n    const [listamateriasseleccionadas, setListaMateriasSeleccionadas] = useState([]);\r\n    const [listadehorarios, setListaDeHorarios] = useState([]);\r\n    const [titulo, setTitulo] = useState('¡Ingresa tus materias!');\r\n    \r\n    //UseEffect\r\n    // Guarda materias en localStorage\r\n    useEffect(() => {\r\n        if(listamaterias.length!== 0){//Agrega materias a localStorage\r\n            localStorage.setItem('ReactGeneradorHorarios', JSON.stringify(listamaterias));\r\n        }\r\n        \r\n    }, [listamaterias])\r\n\r\n    // Obtiene Materias de localStorage cuando se abre la pagina\r\n    useEffect(() => {\r\n        // Get localStorage and is assigned to subjects\r\n        const local = localStorage.getItem('ReactGeneradorHorarios');\r\n        //console.log(`local: ${local}`);\r\n        \r\n        const materias = JSON.parse(local);\r\n        //console.log(`subjects: ${subjects}`);\r\n\r\n        if (materias === null){\r\n            setListaMaterias([]);\r\n        }else{\r\n            // subjects objects added to the list\r\n            setListaMaterias(\r\n                materias.map(materia => (materia))\r\n            )\r\n        }\r\n            \r\n    }, [])\r\n    \r\n    // Genera los horarios posibles\r\n    useEffect(() => {\r\n        if(listamateriasseleccionadas.length!== 0){//Agregar validacion mayor a 3\r\n            setTitulo(\"Horarios Generados\")\r\n\r\n            let listaDeHorarios = [];\r\n            // Generar nueva lista sin espacios en nombres, ni acentos, ni puntos\r\n            let listaDeMaterias = cleanNamesSubjects(listamateriasseleccionadas);\r\n            listaDeHorarios.push(listaDeMaterias);\r\n            // Generar lista de listas con materias mismo nombre\r\n            duplicatedSubjectsList(listaDeHorarios);\r\n            // Pasar listas por horarios\r\n            filterOverlapping(listaDeHorarios);\r\n            // Regresar formato original a los horarios generados\r\n            setOriginalValues(listaDeHorarios,listamateriasseleccionadas);\r\n            // Guardar lista de listas en un state\r\n             setListaDeHorarios(listaDeHorarios);\r\n        }\r\n    }, [listamateriasseleccionadas])\r\n\r\n    return ( \r\n        <Fragment>\r\n            <Header \r\n                titulo = {titulo}\r\n            />\r\n\r\n            <div className=\"contenedor-form\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col xl12 l12 m12 s12\">\r\n                        <Formulario\r\n                            listamaterias={listamaterias}\r\n                            setListaMaterias={setListaMaterias}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col xl12 l12 m12 s12\">\r\n                        <EditorMaterias \r\n                            listamaterias = {listamaterias}\r\n                            setListaMaterias = {setListaMaterias}\r\n                            listamateriasseleccionadas = {listamateriasseleccionadas}\r\n                            setListaMateriasSeleccionadas = {setListaMateriasSeleccionadas}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col xl12 l12 m12 s12\">\r\n                   <ListaDeHorarios\r\n                        listadehorarios = {listadehorarios}\r\n                   /> \r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default MainPage;","import React from 'react';\n\nimport MainPage from './components/MainPage';\n\nfunction App() {\n  return (\n    <MainPage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}